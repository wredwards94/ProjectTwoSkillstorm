// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace ProjectTwoGroup3.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeviceId");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Storage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cde3cf86-46fb-40b3-bd45-e64171469e9b"),
                            Color = "Black",
                            Manufacturer = "Apple",
                            Model = "iPhone 15 Plus",
                            PhoneNumber = "2629423847",
                            Storage = "64GB"
                        },
                        new
                        {
                            Id = new Guid("7b483b60-90e2-4c89-836c-4ad8946b8aa7"),
                            Color = "Grey",
                            Manufacturer = "Samsung",
                            Model = "Galaxy S24 Ultra",
                            PhoneNumber = "7187624769",
                            Storage = "128GB"
                        },
                        new
                        {
                            Id = new Guid("f5222ea1-947e-45c1-a59a-a5a6e296b902"),
                            Color = "Blue",
                            Manufacturer = "Apple",
                            Model = "iPhone 15",
                            PhoneNumber = "3036313605",
                            Storage = "256GB"
                        },
                        new
                        {
                            Id = new Guid("97a612e4-13d6-43c0-805b-30fafa1ae05a"),
                            Color = "Mint Blue",
                            Manufacturer = "Google",
                            Model = "Pixel 8 Pro",
                            PhoneNumber = "8472898809",
                            Storage = "128GB"
                        },
                        new
                        {
                            Id = new Guid("4f05e337-e657-4848-9efe-8b291bf18f1f"),
                            Color = "Violet",
                            Manufacturer = "Google",
                            Model = "Pixel 7",
                            PhoneNumber = "2085544516",
                            Storage = "256GB"
                        },
                        new
                        {
                            Id = new Guid("88ca3741-b8f4-44f6-baef-059389a34907"),
                            Color = "White",
                            Manufacturer = "Apple",
                            Model = "iPhone 13",
                            PhoneNumber = "7712780071",
                            Storage = "64GB"
                        },
                        new
                        {
                            Id = new Guid("6488bdee-e52c-442a-b754-8a8f6c0e5ce0"),
                            Color = "Red",
                            Manufacturer = "Motorola",
                            Model = "Razr Plus",
                            PhoneNumber = "5418064868",
                            Storage = "128GB"
                        },
                        new
                        {
                            Id = new Guid("86a2e9d1-881f-4aba-ba25-e563b460a97a"),
                            Color = "Blue",
                            Manufacturer = "Samsung",
                            Model = "iPhone 15 Plus",
                            PhoneNumber = "2105176786",
                            Storage = "128GB"
                        },
                        new
                        {
                            Id = new Guid("913cdb0e-2618-4c30-b760-0a78857eb0dd"),
                            Color = "Blue",
                            Manufacturer = "Apple",
                            Model = "iPhone 12",
                            PhoneNumber = "5127710406",
                            Storage = "128GB"
                        },
                        new
                        {
                            Id = new Guid("baf6fd9a-ee78-4512-b298-03bd824f3fbd"),
                            Color = "Purple",
                            Manufacturer = "Samsung",
                            Model = "Galaxy S21+",
                            PhoneNumber = "2197287862",
                            Storage = "512GB"
                        });
                });

            modelBuilder.Entity("Entities.PhonePlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlanId");

                    b.Property<int>("DeviceLimit")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhonePlans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6daf5fa-75fc-485a-8b6d-388e4132cfcc"),
                            DeviceLimit = 1,
                            Price = 29.99m,
                            Title = "Basic Plan"
                        },
                        new
                        {
                            Id = new Guid("23d7dc69-ff2f-42e9-92d5-20aebbb0747f"),
                            DeviceLimit = 3,
                            Price = 69.99m,
                            Title = "Premium Plan"
                        },
                        new
                        {
                            Id = new Guid("1d5cc690-684b-4dc4-b4ac-1bdf90c97839"),
                            DeviceLimit = 5,
                            Price = 99.99m,
                            Title = "Family Plan"
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25f87c58-9061-4bb7-aa3a-4a05177481d2"),
                            Address = "123 Main St",
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "password1",
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("538091ec-802c-460d-a56e-8ce2414782b2"),
                            Address = "456 Elm St",
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "password2",
                            Username = "janesmith"
                        },
                        new
                        {
                            Id = new Guid("3f86cc51-c688-42de-aa44-d35c5db73bc4"),
                            Address = "789 Loon St",
                            Email = "elmer.fudd@example.com",
                            FirstName = "Elmer",
                            LastName = "Fudd",
                            Password = "password3",
                            Username = "elmerfudd"
                        });
                });

            modelBuilder.Entity("Entities.UserPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPlans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93e289fa-ffa4-484b-b66e-7df8078f9ed5"),
                            PlanId = new Guid("f6daf5fa-75fc-485a-8b6d-388e4132cfcc"),
                            UserId = new Guid("25f87c58-9061-4bb7-aa3a-4a05177481d2")
                        },
                        new
                        {
                            Id = new Guid("d1e5f1d3-d768-403c-9431-564e9cbe84bf"),
                            PlanId = new Guid("23d7dc69-ff2f-42e9-92d5-20aebbb0747f"),
                            UserId = new Guid("538091ec-802c-460d-a56e-8ce2414782b2")
                        },
                        new
                        {
                            Id = new Guid("f512ba58-cc89-49f5-8489-367865917a8b"),
                            PlanId = new Guid("1d5cc690-684b-4dc4-b4ac-1bdf90c97839"),
                            UserId = new Guid("3f86cc51-c688-42de-aa44-d35c5db73bc4")
                        });
                });

            modelBuilder.Entity("ProjectTwoSkillstorm.Entities.UserDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPlanID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserDevices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac3f3dc7-ebb4-4f8d-907b-c45f71a8d9a5"),
                            ActivationDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeviceID = "cde3cf86-46fb-40b3-bd45-e64171469e9b",
                            UserPlanID = "93e289fa-ffa4-484b-b66e-7df8078f9ed5"
                        },
                        new
                        {
                            Id = new Guid("18d346f8-edcc-4700-ab34-4518cd044674"),
                            ActivationDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeviceID = "7b483b60-90e2-4c89-836c-4ad8946b8aa7",
                            UserPlanID = "d1e5f1d3-d768-403c-9431-564e9cbe84bf"
                        },
                        new
                        {
                            Id = new Guid("022ae233-4d11-40d3-8170-1b034022eb57"),
                            ActivationDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeviceID = "f5222ea1-947e-45c1-a59a-a5a6e296b902",
                            UserPlanID = "d1e5f1d3-d768-403c-9431-564e9cbe84bf"
                        },
                        new
                        {
                            Id = new Guid("5c38b804-3093-4c05-95c9-79caae650e15"),
                            ActivationDate = new DateTime(2023, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeviceID = "97a612e4-13d6-43c0-805b-30fafa1ae05a",
                            UserPlanID = "f512ba58-cc89-49f5-8489-367865917a8b"
                        },
                        new
                        {
                            Id = new Guid("0cf43dcb-563d-4707-b2b3-7f6ff4d69f7f"),
                            ActivationDate = new DateTime(2024, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeviceID = "4f05e337-e657-4848-9efe-8b291bf18f1f",
                            UserPlanID = "f512ba58-cc89-49f5-8489-367865917a8b"
                        },
                        new
                        {
                            Id = new Guid("d80449d6-cabf-4bae-b7b8-1888ac1caab9"),
                            ActivationDate = new DateTime(2024, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeviceID = "88ca3741-b8f4-44f6-baef-059389a34907",
                            UserPlanID = "f512ba58-cc89-49f5-8489-367865917a8b"
                        });
                });

            modelBuilder.Entity("Entities.UserPlan", b =>
                {
                    b.HasOne("Entities.PhonePlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
